#pragma once

#include "Common.h"
#include "Shape.h"

namespace SRay
{

class Plan : public Shape
{
public:
	Plan(Vector pOrigin=Vector(0, 0, 0), Vector pNormal=Vector(0, 0, 1.0f)):m_origin(pOrigin),m_normal(pNormal) {};
	~Plan(void);

	float Intersect(Ray &pRay)
	{
		//float t = - ( (A*X + B*Y + C*Z + D) / (A*DIR.x + B*DIR.y + C*DIR.z) )

		return !(((pRay.m_direction.z - pRay.m_origin.z) == 0) || (pRay.m_origin.z == 0));
	}

	Vector		m_origin;
	Vector		m_normal;
};

}
